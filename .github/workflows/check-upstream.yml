name: Integration Test
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        repo:
          - chartName: authelia
            chartType: optional
            github_user: authelia
            github_repo: chartrepo
            images:
              - authelia/authelia
            release_remove_string: authelia-

          # - chartName: certManager
          #   chartType: core
          #   github_user: cert-manager
          #   github_repo: cert-manager
          #   images:
          #     - quay.io/jetstack/cert-manager-cainjector
          #     - quay.io/jetstack/cert-manager-controller
          #     - quay.io/jetstack/cert-manager-webhook
          #   release: v1.11.0
          #   dockertag: v1.11.0
          #   release_remove_string: ""

          # - chartName: nginxingress
          #   chartType: optional
          #   github_user: nginxinc
          #   github_repo: kubernetes-ingress
          #   images:
          #     - nginx/nginx-ingress
          #   release: v3.0.2
          #   dockertag: edge-alpine
          #   release_remove_string: ""

          # - chartName: sealedSecrets
          #   chartType: core
          #   github_user: bitnami-labs
          #   github_repo: sealed-secrets
          #   images:
          #     - bitnami/sealed-secrets-controller
          #   release: v0.19.5
          #   dockertag: v0.19.5
          #   release_remove_string: sealed-secrets-

          # - chartName: democratic_iscsi
          #   chartType: optional
          #   github_user: democratic-csi
          #   github_repo: charts
          #   images:
          #     - loeken/democratic-csi
          #   release: democratic-csi-0.13.5
          #   dockertag: v1.7.7

          # - chartName: democratic_nfs
          #   chartType: optional
          #   github_user: democratic-csi
          #   github_repo: charts
          #   images:
          #     - loeken/democratic-csi
          #   release: democratic-csi-0.13.5
          #   dockertag: v1.7.7

          # - chartName: ha
          #   chartType: optional
          #   github_user: home-assistant
          #   github_repo: core
          #   images:
          #     -  loeken/home-assistant
          #   release: 2023.3.3
          #   dockertag: 2023.3.3
          #   self_managed_image: 'true'
          #   self_managed_chart: 'true'
          #   remote_chart_name: home-assistant
    steps:

      - uses: actions/checkout@main

      - name: Install yq
        id: get_chart_version
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          cd $GITHUB_WORKSPACE

          echo "CHART_VERSION=$(cat values-${{ matrix.repo.chartType }}.yaml | yq -r '.${{ matrix.repo.chartName }}.chartVersion')"
          echo "CHART_VERSION=$(cat values-${{ matrix.repo.chartType }}.yaml | yq -r '.${{ matrix.repo.chartName }}.chartVersion')" >> $GITHUB_ENV

      - name: debug
        run: |
          echo ${{ env.CHART_VERSION }}
      - name: test for pending updates
        # Put your action repo here
        id: test_updates
        uses: loeken/homelab-updater@main
        with:
          github_user: ${{ matrix.repo.github_user }}
          github_repo: ${{ matrix.repo.github_repo }}
          github_token: ${{ secrets.UPDATE_TOKEN }}
          chart_version: ${{ env.CHART_VERSION }}
          chart_name: ${{ matrix.repo.chartName }}
          release_remove_string: ${{ matrix.repo.release_remove_string }}
          chart_type: ${{ matrix.repo.chartType }}
          self_managed_image: ${{ matrix.repo.self_managed_image }}
          docker_image: ${{ matrix.repo.docker_image }}
          remote_chart_name: ${{ matrix.repo.remote_chart_name }}
          self_managed_chart: ${{ matrix.repo.self_managed_chart }}
        env:
          GITHUB_ENV: ${{ github.workspace }}/.env

      - name: Read output file
        id: read_output
        run: |
          echo "::set-output name=release::$(cat output.txt | grep RELEASE= | cut -d'=' -f2)"

      - name: Save release output
        run: |
          echo "${{ steps.read_output.outputs.release }}" >> $GITHUB_ENV

      - name: Display release value
        run: |
          echo "Release value: $RELEASE"
        
      # - name: Run Trivy vulnerability scanner
      #   run: |
      #     for image in ${{ join(matrix.repo.images, ' ') }}; do
      #       echo "Running trivy for $image"
      #       docker run --rm aquasec/trivy image $image:${{ matrix.repo.dockertag }}
      #     done